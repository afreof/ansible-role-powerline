---
- include: install-dnf.yml
  when: "ansible_os_family == 'RedHat'"

- include: install-pip.yml
  when: "ansible_os_family != 'RedHat'"

- name: "ensure old powerline script is not installed"
  file:
    path: /etc/profile.d/powerline.sh
    state: absent
  become: yes

- name: "Install powerline script"
  template:
    src: powerline.sh.j2
    dest: /etc/bash_powerline.sh
  become: yes

- name: "Configure top theme for powerline"
  lineinfile:
    dest: "{{ powerline_config_file }}"
    line: "\t\t\"default_top_theme\": \"{{ powerline_default_top_theme }}\","
    regexp: "default_top_theme"
    insertbefore: "term_truecolor"
  become: yes

- name: "Configure powerline for shell"
  template:
    src: powerline-shell.json.j2
    dest: "{{ powerline_themes_directory }}/shell/default.json"
  become: yes

- name: "Enable powerline in bash shell"
  lineinfile:
    dest: "{{ item }}/.bashrc"
    line: "source /etc/bash_powerline.sh"
  become: yes
  with_items: "{{ powerline_home_dirs }}"

- name: "Configure powerline for tmux"
  template:
    src: powerline-tmux.json.j2
    dest: "{{ powerline_themes_directory }}/tmux/default.json"
  become: yes

- name: "Check if tmux-powerline is installed"
  stat: path="/usr/share/tmux/powerline.conf"
  register: check_tmux_conf

- name: "Enable powerline for tmux"
  lineinfile:
    dest: "{{ item }}/.tmux.conf"
    line: "source /usr/share/tmux/powerline.conf"
    create: yes
    mode: 0644
  become: yes
  with_items: "{{ powerline_home_dirs }}"
  when: check_tmux_conf.stat.exists == True
